[{"uid":"EGa69D6fABCIAfsjgCZh","name":"<span class='badge bg-purple mr-2'>Chung</span>Gồng lệnh<span class='pl-2 text-secondary font-weight-normal'>04/04/2021</span>","description":"<img src=\"https://i.imgur.com/fhKCYqQ.jpg\" class=\"img-fluid\"></img>","src":"/* <img src=\"https://i.imgur.com/fhKCYqQ.jpg\" class=\"img-fluid\"></img> */\r\n\r\nfunction indicator() {\r\n    return [];\r\n}\r\n\r\nfunction userInput() {\r\n    let inputs = [];\r\n    inputs.push(createInput(\"Số lệnh chờ\", 3, \"number\"));\r\n    inputs.push(createInput(\"Tắt bot khi gãy\", \"không\", \"select\", [\"có\", \"không\"]));\r\n    inputs.push(createInput(\"Chế độ đánh\", \"ngược màu\", \"select\", [\"cùng màu\", \"ngược màu\"]));\r\n    inputs.push(createInput(\"Hàng đánh\", \"dưới\", \"select\", [\"trên\", \"dưới\"]));\r\n    return inputs;\r\n}\r\n\r\nfunction reverseValue(value) {\r\n    value = value.toUpperCase();\r\n    if (value === \"UP\")\r\n        return \"DOWN\";\r\n    if (value === \"DOWN\")\r\n        return \"UP\";\r\n    return \"SKIP\";\r\n}\r\n\r\nfunction isLossStreak(amount, history) {\r\n    if (history.length < amount)\r\n        return false;\r\n    let arr = history.slice(0, amount);\r\n    return arr.filter(result => !result.win).length == amount;\r\n}\r\n\r\nfunction getResultArray(table) {\r\n    return table.filter(candle => !candle.order);\r\n}\r\n\r\nfunction getPredict(table, row, reverse) {\r\n    let arr = getResultArray(table);\r\n    let rowNum = row ? 1 : 0;\r\n    let arrNum = row ? 1 : 3;\r\n    if (arr.length % 2 == rowNum)\r\n        return \"skip\";\r\n    let predict = arr[arr.length - arrNum].value;\r\n    if (reverse)\r\n        predict = reverseValue(predict);\r\n    return predict;\r\n}\r\n\r\nfunction defaultDefine(bot) {\r\n    bot.define(\"trade\", { trading: false, max: false });\r\n}\r\n\r\nfunction onSimulatorResult(bot, win) {\r\n    defaultDefine(bot);\r\n    let trade = bot.get(\"trade\");\r\n    let inputs = bot.getUserInput();\r\n    let amount = parseInt(inputs[0]);\r\n    let stoploss = inputs[1] === \"có\";\r\n\r\n    let history = bot.getSimulateHistory();\r\n    printTable(history);\r\n    if (isLossStreak(amount, history)) {\r\n        trade.trading = true;\r\n        history.length = 0;\r\n    }\r\n}\r\n\r\nfunction onResult(bot, win) {\r\n    defaultDefine(bot);\r\n    let trade = bot.get(\"trade\");\r\n    let inputs = bot.getUserInput();\r\n    let amount = parseInt(inputs[0]);\r\n    let stoploss = inputs[1] === \"có\";\r\n\r\n    if (win) {\r\n        trade.trading = false;\r\n    } else {\r\n        if (trade.max) {\r\n            trade.trading = false;\r\n            let history = bot.getSimulateHistory();\r\n            history.length = 0;\r\n            if (stoploss)\r\n                bot.disable();\r\n        }\r\n    }\r\n}\r\n\r\nasync function predict(bot) {\r\n    defaultDefine(bot);\r\n    let trade = bot.get(\"trade\");\r\n\r\n    let inputs = bot.getUserInput();\r\n    let amount = parseInt(inputs[0]);\r\n    let stoploss = inputs[1] === \"có\";\r\n    let reverse = inputs[2] === \"ngược màu\";\r\n    let row = inputs[3] === \"trên\";\r\n\r\n    let tables = await candleHistory();\r\n    let table = tables[1].concat(tables[0]);\r\n    let predict = getPredict(table, row, reverse);\r\n    let multiplyIndex = bot.statistics.multiplyLevelIndex;\r\n    let maxMultiply = bot.getConfig().amount.length - 1;\r\n\r\n    bot.simulate(predict);\r\n    if (trade.trading) {\r\n        trade.max = multiplyIndex == maxMultiply;\r\n        return predict;\r\n    }\r\n    else return \"skip\";\r\n}","user_input":["3","không","ngược màu","dưới"]}]